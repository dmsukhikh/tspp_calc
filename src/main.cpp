#include <Calculator.hpp>

/**
 * \file main.cpp
 * Исполняемый файл утилиты
 * \author dmsukhikh
 */

/**
 * \mainpage TSPP Calculator
 * \section intro Введение
 * Данный проект был выполнен в рамках лабораторной работы по курсу "Технологии
 * создания программного продукта". Проект представляет собой header-only
 * библиотеку для работы с матрицами, а также консольную утилиту,
 * демонстрирующую возможности библиотеки. Библиотека предлагает пользователю
 * удобный (как по мне) и производительный (относительно картошки) способ
 * хранить, обрабатывать, а также производить некоторые широкоизвестные
 * математические операции над матрицами.
 *
 * \subsection build Сборка проекта
 * Все технические особенности, связанные со сборкой проекта, зависимостями и
 * прочим располагаются в README проекта.
 *
 * \subsection credits Благодарности
 * Выражаю благодарность создателям Doxygen за такую чудесную платформу, а также
 * одному моему <a href="https://chatgpt.com">очень хорошему другу из
 * Сан-Франциско</a>.
 *
 * \section usage Использование утилиты
 * Библиотека состоит, по факту, из одного класса, так что она, на мой взгляд,
 * не нуждается в пояснении к использованию: смотрите конструкторы класса
 * MatrixGeneric и его методы. Документация к ним прилагается. Однако стоит
 * рассказать про утилиту.
 *
 * Утилита исполняется следующим образом:
 * ```
 * tspp_calc [файл с информацией] [-f|-d]
 * ```
 *
 * Флаги `-f`, `-d` указывают на тип элементов матриц: -f - float, -d - double.
 * После этого утилита считывает переданный файл и производит, в котором описаны
 * матрицы и необходимая операция над ними. Далее, результат этой операции
 * направляется в поток стандартного вывода.
 *
 * Список возможных операций следующий:
 *  - Все арифметические операции: **-, *, /, +**
 *  - **det** - определитель матрицы
 *  - **inv** - обратная матрица
 *  - **rk** - ранг матрицы
 *  - **t** - транспонирование матрицы
 *  - **pow** - степень матрицы
 *
 * Слова или символы, указанные жирным - соответствующие операции команда в
 * файла. Формат файла следующий:
 * ```
 * [команда] [аргументы команды]
 * [высота матрицы] [ширина матрицы]
 * [элементы матрицы ...]
 * ...
 * ```
 * Если операция требует двух матриц (например, сложение), то после первой
 * матрицы в таком же виде сразу указывается информация о второй матрице.
 * Элементы матрицы разделяются пробелами, разделять строки переносом строки, в
 * целом, не обязательно. Примеры правильных (и не правильных) файлов можно
 * посмотреть в папке test/test_suite. В случае некорректного ввода (файл
 * отсутствует или информация в нем некорректна) программа завершится с ошибкой.
 */

int main(int argc, char** argv)
{
    if (argc < 3)
    {
        std::cout << "[tspp_calc] usage: tspp_calc [file] [-f|-d]" << std::endl;
        return -1;
    }

    try
    {
        if (std::string(argv[2]) == "-f")
        {
            mainRoutine<float>(argv);
        }
        else if (std::string(argv[2]) == "-d")
        {
            mainRoutine<double>(argv);
        }
        else
        {
            std::cout << "Invalid flag: " << argv[2]
                      << ". Supported flags: -f, -d" << std::endl;
            return -1;
        }
    }
    catch (...)
    {
        return -1;
    }

    return 0;
}

